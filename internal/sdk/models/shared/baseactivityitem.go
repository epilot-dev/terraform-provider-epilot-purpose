// Code generated by Speakeasy (https://speakeasyapi.com). DO NOT EDIT.

package shared

import (
	"github.com/epilot-dev/terraform-provider-epilot-taxonomy/internal/sdk/internal/utils"
	"time"
)

type BaseActivityItem struct {
	// See https://github.com/ulid/spec
	ID     *string                `json:"_id,omitempty"`
	Caller *ActivityCallerContext `json:"caller,omitempty"`
	// Message for activity. Supports handlebars syntax.
	Message   string         `json:"message"`
	Payload   map[string]any `json:"payload,omitempty"`
	Timestamp *time.Time     `json:"timestamp,omitempty"`
	// Title for activity. Supports handlebars syntax.
	Title string `json:"title"`
	Type  string `json:"type"`
}

func (b BaseActivityItem) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(b, "", false)
}

func (b *BaseActivityItem) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &b, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *BaseActivityItem) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *BaseActivityItem) GetCaller() *ActivityCallerContext {
	if o == nil {
		return nil
	}
	return o.Caller
}

func (o *BaseActivityItem) GetMessage() string {
	if o == nil {
		return ""
	}
	return o.Message
}

func (o *BaseActivityItem) GetPayload() map[string]any {
	if o == nil {
		return nil
	}
	return o.Payload
}

func (o *BaseActivityItem) GetTimestamp() *time.Time {
	if o == nil {
		return nil
	}
	return o.Timestamp
}

func (o *BaseActivityItem) GetTitle() string {
	if o == nil {
		return ""
	}
	return o.Title
}

func (o *BaseActivityItem) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}
