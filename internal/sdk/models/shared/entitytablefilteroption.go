// Code generated by Speakeasy (https://speakeasyapi.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// EntityTableFilterOptionType - The type of filter option
type EntityTableFilterOptionType string

const (
	EntityTableFilterOptionTypeSearch EntityTableFilterOptionType = "search"
	EntityTableFilterOptionTypeFilter EntityTableFilterOptionType = "filter"
)

func (e EntityTableFilterOptionType) ToPointer() *EntityTableFilterOptionType {
	return &e
}
func (e *EntityTableFilterOptionType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "search":
		fallthrough
	case "filter":
		*e = EntityTableFilterOptionType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for EntityTableFilterOptionType: %v", v)
	}
}

type EntityTableFilterOption struct {
	AllowedSchemas []string `json:"allowedSchemas,omitempty"`
	// The group for the filter option
	Group *string `json:"group,omitempty"`
	// The label for the filter option
	Label string `json:"label"`
	// The label type for the filter option
	LabelType *string `json:"label_type,omitempty"`
	// The name for the filter option
	Name *string `json:"name,omitempty"`
	// The related options for the filter option
	RelatedOptions []EntityTableFilterOption `json:"relatedOptions,omitempty"`
	// The type of filter option
	Type *EntityTableFilterOptionType `json:"type,omitempty"`
}

func (o *EntityTableFilterOption) GetAllowedSchemas() []string {
	if o == nil {
		return nil
	}
	return o.AllowedSchemas
}

func (o *EntityTableFilterOption) GetGroup() *string {
	if o == nil {
		return nil
	}
	return o.Group
}

func (o *EntityTableFilterOption) GetLabel() string {
	if o == nil {
		return ""
	}
	return o.Label
}

func (o *EntityTableFilterOption) GetLabelType() *string {
	if o == nil {
		return nil
	}
	return o.LabelType
}

func (o *EntityTableFilterOption) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *EntityTableFilterOption) GetRelatedOptions() []EntityTableFilterOption {
	if o == nil {
		return nil
	}
	return o.RelatedOptions
}

func (o *EntityTableFilterOption) GetType() *EntityTableFilterOptionType {
	if o == nil {
		return nil
	}
	return o.Type
}
