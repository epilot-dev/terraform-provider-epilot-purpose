openapi: 3.0.2

info:
  title: Entity API
  version: 1.0.0
  description: |
    Flexible data layer for epilot Entities.

    Use this API configure and access your business objects like Contacts, Opportunities and Products.

    [Feature Documentation](https://docs.epilot.io/docs/entities/flexible-entities)

servers:
  - url: https://entity.sls.epilot.io
    description: Entity service - Production

tags:
  - name: Taxonomy
    description: Entity classification with Taxonomies
security:
  - EpilotAuth: []
  - EpilotOrg: []

paths:
  /v1/entity/listTaxonomies:
    get:
      operationId: listTaxonomies
      summary: listTaxonomies
      description: List taxonomies in an organisation
      tags:
        - Taxonomy
      responses:
        "200":
          description: Returns list of taxonomies in an organisation
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      $ref: "#/components/schemas/Taxonomy"

  /v1/entity/taxonomies/{taxonomySlug}:
    get:
      operationId: getTaxonomy
      summary: getTaxonomy
      description: Get taxonomy by slug
      tags:
        - Taxonomy
      parameters:
        - $ref: "#/components/parameters/TaxonomySlugPathParam"
      responses:
        "200":
          description: Taxonomy
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Taxonomy"

  /v1/entity/taxonomies/{taxonomySlug}:autocomplete:
    get:
      operationId: taxonomyAutocomplete
      summary: taxonomyAutocomplete
      description: Taxonomies autocomplete
      tags:
        - Taxonomy
      parameters:
        - $ref: "#/components/parameters/TaxonomySlugPathParam"
        - in: query
          name: query
          description: Input to autocomplete
          schema:
            type: string
        - in: query
          name: size
          description: Minimum number of results to return
          schema:
            type: number
      responses:
        "200":
          description: Taxonomy classifications
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      $ref: "#/components/schemas/TaxonomyClassification"

  /v1/entity/taxonomies/classifications:search:
    post:
      operationId: taxonomiesClassificationsSearch
      summary: taxonomiesClassificationsSearch
      description: List taxonomy classifications in an organisation based on taxonomy slug
      tags:
        - Taxonomy
      parameters:
        - $ref: "#/components/parameters/TaxonomySlugQueryParam"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                classificationIds:
                  type: array
                  items:
                    $ref: "#/components/schemas/ClassificationId"
      responses:
        "200":
          description: Returns list of taxonomy classifications
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      $ref: "#/components/schemas/TaxonomyClassification"

  /v1/entity/taxonomies/{taxonomySlug}/classifications:
    post:
      x-speakeasy-entity-operation: Taxonomy#create
      operationId: updateClassificationsForTaxonomy
      summary: updateClassificationsForTaxonomy
      description: Update taxonomies in an organisation based in taxonomy slug
      tags:
        - Taxonomy
      parameters:
        - $ref: "#/components/parameters/TaxonomySlugPathParam"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ClassificationsUpdate"
      responses:
        "200":
          description: Taxonomies classifications
          content:
            application/json:
              schema:
                x-speakeasy-entity: Taxonomy
                type: object
                properties:
                  created:
                    type: array
                    items:
                      $ref: "#/components/schemas/TaxonomyClassification"
                  updated:
                    type: array
                    items:
                      $ref: "#/components/schemas/TaxonomyClassification"
                  deleted:
                    type: array
                    items: {}
components:
  securitySchemes:
    EpilotAuth:
      type: http
      scheme: bearer
      description: Authorization header with epilot OAuth2 bearer token
      bearerFormat: JWT
    EpilotOrg:
      description: Overrides the target organization to allow shared tenantaccess
      name: x-epilot-org-id
      in: header
      type: apiKey

  schemas:
    # Taxonomy
    Taxonomy:
      type: object
      properties:
        slug:
          $ref: "#/components/schemas/TaxonomySlug"
        name:
          type: string
          description: A human friendly name of a Taxonomy e.g. Purpose, Product Category, Folder, Tag
          example: Purpose
        plural:
          type: string
          description: Plural name of a Taxonomy e.g. Purposes, Product Categories, Folders, Tags
          example: Purposes
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
        - slug
        - name
    TaxonomyClassification:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/ClassificationId"
        name:
          type: string
          example: Wallbox PV
        parents:
          type: array
          items:
            $ref: "#/components/schemas/ClassificationId"
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
        - name
    ClassificationId:
      type: string
      format: uuid
    TaxonomySlug:
      type: string
      description: URL-friendly name for taxonomy
      example: purpose
    ClassificationsUpdate:
      type: object
      properties:
        create:
          type: array
          items:
            $ref: "#/components/schemas/TaxonomyClassification"
        update:
          type: array
          items:
            $ref: "#/components/schemas/TaxonomyClassification"
        delete:
          type: array
          items:
            $ref: "#/components/schemas/ClassificationId"
        name:
          type: string
          description: The name of the organization setting to check
        enabled:
          type: boolean
          description: Whether the setting should be enabled or not
  
  parameters:
    TaxonomySlugQueryParam:
      name: taxonomySlug
      description: Taxonomy slug
      in: query
      schema:
        type: string
      required: true
    TaxonomySlugPathParam:
      name: taxonomySlug
      description: Taxonomy slug
      x-speakeasy-match: slug
      in: path
      required: true
      schema:
        type: string